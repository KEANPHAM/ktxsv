Database KTXSV
 
Copy từ dòng dưới

USE master;
GO
IF EXISTS (SELECT * FROM sys.databases WHERE name = 'KTXSV')
BEGIN
    ALTER DATABASE KTXSV SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE KTXSV;
END
GO

CREATE DATABASE KTXSV;
GO
USE KTXSV;
GO

CREATE TABLE Users (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    Username VARCHAR(50) NOT NULL UNIQUE,
    PasswordHash VARCHAR(255) NOT NULL,
    FullName NVARCHAR(100) NOT NULL,
    Gender VARCHAR(10) CHECK (Gender IN ('Male', 'Female')),
    Email VARCHAR(100) UNIQUE,
    Phone VARCHAR(20),
    Role VARCHAR(20) CHECK (Role IN ('Student', 'Admin')) DEFAULT 'Student',
    CreatedAt DATETIME DEFAULT GETDATE()
);
GO

-- ==========================================
-- 2. Bảng Rooms (Phòng KTX)
-- ==========================================
CREATE TABLE Rooms (
    RoomID INT IDENTITY(1,1) PRIMARY KEY,
    Gender VARCHAR(10) CHECK (Gender IN ('Male', 'Female')),
    RoomNumber VARCHAR(10) NOT NULL,
    Building VARCHAR(20) NOT NULL,
    Capacity INT NOT NULL CHECK (Capacity > 0),
    Occupied INT DEFAULT 0 CHECK (Occupied >= 0),
    Price DECIMAL(10,2) NOT NULL,
    Status VARCHAR(20) CHECK (Status IN ('Available', 'Full', 'Maintenance')) DEFAULT 'Available'
);
GO

-- ==========================================
-- 3. Bảng Registrations (Đăng ký ở / hợp đồng)
-- ==========================================
CREATE TABLE Registrations (
    RegID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    RoomID INT NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NULL,
    Status VARCHAR(20) CHECK (Status IN ('Pending','Approved','Rejected','Active','Ended')) DEFAULT 'Pending',
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID) ON DELETE CASCADE
);
GO

-- ==========================================
-- 4. Bảng Payments (Thanh toán)
-- ==========================================
CREATE TABLE Payments (
    PaymentID INT IDENTITY(1,1) PRIMARY KEY,
    RegID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount >= 0),
    Type VARCHAR(20) CHECK (Type IN ('Rent','Electricity','Water','Other')),
    PaymentDate DATE DEFAULT GETDATE(),
    Status VARCHAR(20) CHECK (Status IN ('Paid','Unpaid','Overdue')) DEFAULT 'Unpaid',
    FOREIGN KEY (RegID) REFERENCES Registrations(RegID) ON DELETE CASCADE
);
GO

-- ==========================================
-- 5. Bảng Notifications (Thông báo)
-- ==========================================
CREATE TABLE Notifications (
    NotiID INT IDENTITY(1,1) PRIMARY KEY,
    Title NVARCHAR(200) NOT NULL,
    Content NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    TargetRole VARCHAR(20) CHECK (TargetRole IN ('All','Student','Admin')) DEFAULT 'All'
);
GO

-- ==========================================
-- 6. Bảng StudentFiles (Hồ sơ sinh viên)
-- ==========================================
CREATE TABLE StudentFiles (
    FileID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    FileType VARCHAR(50) CHECK (FileType IN ('ApplicationForm','CommitmentForm','Contract','Receipt','Photo','PriorityCertificate')),
    FilePath VARCHAR(255) NOT NULL,
    UploadedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);
GO

-- ==========================================
-- 7. Bảng SupportRequests (Yêu cầu hỗ trợ)
-- ==========================================
CREATE TABLE SupportRequests (
    RequestID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    RoomID INT NULL,
    Title NVARCHAR(200) NOT NULL,
    Description NVARCHAR(MAX),
    Status VARCHAR(20) CHECK (Status IN ('Pending','In Progress','Resolved')) DEFAULT 'Pending',
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID) ON DELETE SET NULL
);
GO

sp_tables