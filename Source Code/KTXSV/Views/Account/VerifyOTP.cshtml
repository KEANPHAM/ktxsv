@{
    Layout = null;
    ViewBag.Title = "Xác minh mã";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
  :root{ --bg:#071124; --accent:#60a5fa; --accent2:#6ee7b7; }
  body{ background: linear-gradient(180deg,#031124 0%, #071a2b 100%); min-height:100vh; display:flex; align-items:center; justify-content:center; color:#dff1ff; font-family:Inter,system-ui,Arial; }
  .wrap{ width:420px; padding:28px; border-radius:14px; background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(0,0,0,0.05)); box-shadow: 0 12px 30px rgba(2,6,23,0.7); }
  .title{ display:flex; gap:12px; align-items:center; margin-bottom:10px; }
  .icon{
    width:48px;height:48px;border-radius:10px; display:flex;align-items:center;justify-content:center;
    background:linear-gradient(135deg,var(--accent),var(--accent2)); color:#021124; font-weight:700;
  }
  h4{ margin:0; }
  p.sub{ color:#9fb6d9; margin-top:6px; margin-bottom:16px; }

  .otp-input{
    letter-spacing:8px; font-size:1.2rem; text-align:center;
    background: rgba(255,255,255,0.02); border:none; padding:12px 10px; border-radius:10px; color:#e6f5ff;
  }
  .btn-verify{ width:100%; background: linear-gradient(90deg,var(--accent2),var(--accent)); color:#021124; border:none; padding:10px; border-radius:10px; font-weight:600; }

  .meta{ display:flex; justify-content:space-between; margin-top:10px; color:#9fb6d9; font-size:0.9rem; }
  .msg { padding:10px; border-radius:8px; margin-bottom:12px; }
  .msg-error { background: rgba(255,80,80,0.06); color:#ffd7d7; border:1px solid rgba(255,80,80,0.05); }

  .media(max-width:480px){ .wrap{ width:92%; } .otp-input{ letter-spacing:6px; } }
    </style>
</head>
<body>
    <div class="wrap">
        <div class="title">
            <div class="icon">OTP</div>
            <div>
                <h4>Nhập mã xác nhận</h4>
                <p class="sub">Nhập mã 6 chữ số đã gửi đến email của bạn</p>
            </div>
        </div>

        @if (ViewBag.Error != null)
        {
            <div class="msg msg-error">@ViewBag.Error</div>
        }

        @using (Html.BeginForm("VerifyOTP", "Account", FormMethod.Post))
        {
            <div class="mb-3">
                <input type="text" name="otp" maxlength="6" pattern="\d{6}" required class="form-control otp-input" placeholder="● ● ● ● ● ●" />
            </div>
            <button class="btn btn-verify" type="submit">Xác nhận</button>

            <div class="meta">
                <div>
                    Chưa nhận mã?
                    <a href="javascript:void(0)" id="resend-link" style="color:#aee1d6">Gửi lại</a>
                </div>
                <div id="countdown">05:00</div>
            </div>
            <script>
    document.getElementById("resend-link").addEventListener("click", function () {
        // Gửi yêu cầu báo lại cho server
        fetch('/Account/ResendCode', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: '@TempData["UserEmail"]' // hoặc lấy từ ViewBag/Model tùy chỗ em đang lưu
            })
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                alert("Mã xác minh mới đã được gửi!");
            } else {
                alert("Không thể gửi lại mã: " + data.message);
            }
        })
        .catch(err => {
            alert("Lỗi kết nối máy chủ!");
            console.error(err);
        });
    });
            </script>
        }

        <script>
            // JS countdown (5 minutes) — purely UI, session expiry handled server-side
            (function () {
                let time = 300;
                const el = document.getElementById('countdown');
                const t = setInterval(() => {
                    if (time <= 0) { clearInterval(t); el.innerText = 'Hết hạn'; return; }
                    time--; const m = Math.floor(time / 60), s = time % 60;
                    el.innerText = String(m).padStart(2, '0') + ':' + String(s).padStart(2, '0');
                }, 1000);
            })();
        </script>
    </div>
</body>
</html>
